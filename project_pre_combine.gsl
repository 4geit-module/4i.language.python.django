.template 0
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
# Authors:
# Caner Candan <caner@candan.fr>, http://caner.candan.fr
#

if !defined(projectnode.django_version)
  define projectnode.django_version = '1.7'
endif

if !defined(projectnode.language)
  define projectnode.language = 'en'
endif

function app_context_import(ctx)
  for project.import as i where i.context = my.ctx & !defined(i.mainapp)
    new o.stmt as s
      if defined(i.\from)
        define s. = "from $(i.\from:) import $(i.import:)"
      else
        define s. = "import $(i.import:)"
      endif
      if defined(i.alias)
        s. += " as $(i.alias:)"
      endif
    endnew s
  endfor i
endfunction app_context_import

function app_context_add_code(ctx, hook)
  for project.code as c where c.context = my.ctx & c.hook = my.hook & !defined(i.mainapp)
    new o.stmt as s
      define s. = c.
    endnew s
  endfor c
endfunction app_context_add_code

function context_add_dynamic_code(ctx, hook)
  for project.code as c where c.context = my.ctx & c.hook = my.hook
    new o.stmt as s
      define s. = c.
    endnew s
  endfor c
endfunction context_add_dynamic_code

.endtemplate
.
.template 1
.
.macro mainapp_context_import(ctx)
. for project.import as i where defined(i.mainapp) & i.mainapp = "True" & i.context = my.ctx
.   if defined(i.\from)
from $(i.\from:) \
.   endif
import $(i.import:)\
.   if defined(i.alias)
 as $(i.alias:)\
.   endif

. endfor i
.endmacro mainapp_context_import
.
.macro mainapp_context_add_code(ctx, hook)
. for project.code as c where defined(c.mainapp) & c.mainapp = "True" & c.context = my.ctx & c.hook = my.hook
$(c.:)
. endfor c
.endmacro mainapp_context_add_code
.
.macro context_add_static_code(ctx, hook)
. for project.code as c where c.context = my.ctx & c.hook = my.hook
$(c.:)
. endfor c
.endmacro context_add_static_code
.
.endtemplate