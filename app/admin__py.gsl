.template 0
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
# Authors:
# Caner Candan <caner@candan.fr>, http://caner.candan.fr
#

new o.stmt as s
  define s. = "from django.contrib.contenttypes import generic"
endnew s
new o.stmt as s
  define s. = "from django.contrib import admin"
endnew s
new o.stmt as s
  define s. = "from django.utils.translation import ugettext_lazy as _"
endnew s
new o.stmt as s
  define s. = "from django.db.models import Count"
endnew s
new o.stmt as s
  define s. = "from . import models, forms"
endnew s
new o.newline as nl
endnew nl

function pre_create_modeladmin
  gsl from "app/admin/exclude_pre.gsl"
  gsl from "app/admin/list_display_pre.gsl"
  gsl from "app/admin/list_filter_pre.gsl"
  gsl from "app/admin/filter_horizontal_pre.gsl"
  gsl from "app/admin/prepopulated_fields_pre.gsl"
  gsl from "app/admin/search_fields_pre.gsl"
  gsl from "app/admin/ordering_pre.gsl"
  gsl from "app/admin/inlines_pre.gsl"
  gsl from "app/admin/class_pre.gsl"
endfunction pre_create_modeladmin

function post_create_modeladmin
  gsl from "app/admin/exclude_post.gsl"
  gsl from "app/admin/list_display_post.gsl"
  gsl from "app/admin/list_filter_post.gsl"
  gsl from "app/admin/filter_horizontal_post.gsl"
  gsl from "app/admin/prepopulated_fields_post.gsl"
  gsl from "app/admin/search_fields_post.gsl"
  gsl from "app/admin/ordering_post.gsl"
  gsl from "app/admin/inlines_post.gsl"
  gsl from "app/admin/class_post.gsl"
  gsl from "app/admin/truncate_post.gsl"
  gsl from "app/admin/column_post.gsl"
  gsl from "app/admin/progressbar_post.gsl"
  gsl from "app/admin/get_queryset_post.gsl"
  gsl from "app/admin/save_related_post.gsl"
endfunction post_create_modeladmin

for projectnode.model as m
  pre_create_modeladmin()
endfor m

for projectnode.model as m
  for m.inline as i
    new o.class as c
      define c.name = '$(m.name:)$(i.name:)Inline'
      if defined(i.inline) & i.inline = "stacked"
        define c.inherits = 'admin.StackedInline'
      else
        define c.inherits = 'admin.TabularInline'
      endif
      new c.stmt as s
        define s. = 'model = models.$(m.name:)$(i.name:)'
      endnew s
      new c.stmt as s
        define s. = 'extra = $(i.extra ? 1)'
      endnew s
    endnew c
  endfor i

  new o.class as c
    define c.name = '$(m.name:)Admin'
    define c.inherits = 'admin.ModelAdmin'
    post_create_modeladmin()
  endnew c

  new o.stmt as s
    define s. = "admin.site.register(models.$(m.name:), $(m.name:)Admin)"
  endnew s
endfor m

for projectnode.model as m
  pre_create_modeladmin()
endfor m

for projectnode.view as m
  new o.class as c
    define c.name = 'View$(m.name:)Admin'
    define c.inherits = 'admin.ModelAdmin'
    post_create_modeladmin()
  endnew c

  new o.stmt as s
    define s. = "admin.site.register(models.View$(m.name:), View$(m.name:)Admin)"
  endnew s
endfor m

.endtemplate